<UserControl x:Class="List.AlarmFrequencyList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="342" d:DesignWidth="715">
    <ListView x:Name="listView" SelectionMode="Single" Background="Black" ScrollViewer.VerticalScrollBarVisibility="Visible">
        <ListView.Resources>

            <!-- Fill Brushes -->


            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border 
          Name="Border"
          Margin="1" 
          CornerRadius="2" 
          Background="Black"
          BorderBrush="Black"
          BorderThickness="1">
                                <Path 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Fill="White"
            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsEnabled" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsEnabled" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border 
          CornerRadius="2" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="18"/>
                        <RowDefinition Height="0.00001*"/>
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="Black" />
                    <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="20"
      Width="20"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 16 L 8 0 L 16 16 Z" />
                    <Track 
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="1,0,1,0"  
          Background="Black"
          BorderBrush="Black" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton 
      Grid.Row="2" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="20"
      Width="20"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 8 16 L 16 0 Z" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18"/>
                        <ColumnDefinition Width="0.00001*"/>
                        <ColumnDefinition MaxWidth="18"/>
                    </Grid.ColumnDefinitions>
                    <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="Black" />
                    <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="20"
      Width="20"
      Command="ScrollBar.LineLeftCommand"
      Content="M 16 0 L 0 8 L 16 16 Z" />
                    <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,1,0,1"  
          Background="Black"
          BorderBrush="Black"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton 
      Grid.Column="2" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="20"
      Height="20"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 16 8 L 0 16 Z"/>
                </Grid>
            </ControlTemplate>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Style.Triggers>
                    <!--Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="18" />
                        <Setter Property="Template" Value="{StaticResource DisabledHorizontalScrollBar}" />
                    </-->
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="18"/>
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ListView.Resources>
        <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListViewItem_Click" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Severity}" Value="CRITICAL">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Severity}" Value="MINOR">
                        <Setter Property="Background" Value="#984807" />
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Severity}" Value="MAJOR">
                        <Setter Property="Background" Value="#632523" />
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
            <GridView>
                <GridView.ColumnHeaderContainerStyle>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <!-- Set any properties you want to set -->
                        <Setter Property="Background" Value="Black" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Height" Value="40" />
                    </Style>
                </GridView.ColumnHeaderContainerStyle>
                <GridViewColumn Header="EQPT" Width="100">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
                                <Grid Margin="6,2,6,2" Height="35">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Equipment}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Header="SEVERITY" Width="100">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
                                <Grid Margin="6,2,6,2">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Severity}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Header="ALARM DESCRIPTION" Width="200">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
                                <Grid Margin="6,2,6,2">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Description}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Header="FREQUENCY" Width="100">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
                                <Grid Margin="6,2,6,2">
                                    <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Frequency}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>
</UserControl>
